#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e
#set -x
unset GIT_DIR

mkdir -p "$1" "$2"
BUILD_DIR=$(cd "$1/" && pwd)
CACHE_DIR=$(cd "$2/" && pwd)

# the directory in which the packages will be stored
PACKAGES_DIR="tmp/repo.git/.cache"

# this variable is used by pub to determine the package install location
PUB_CACHE="$CACHE_DIR/pub-cache"
export PUB_CACHE
mkdir -p $PUB_CACHE

function message {
  echo "$1"
  sync
}

# if no build number is set, download latest
if [ -z "$BUILD" ]; then
    BUILD="latest"
fi

DART_SDK_URL="http://commondatastorage.googleapis.com/dart-editor-archive-integration/$BUILD/dartsdk-linux-64.tar.gz"

cd $BUILD_DIR
mkdir -p $PACKAGES_DIR


message "-----> Installing Dart VM, build: $BUILD"

cd $CACHE_DIR
curl -L $DART_SDK_URL -s -o - | tar xzf -


message "-----> Copy Dart binaries to app root"

cp -r $CACHE_DIR/dart-sdk $BUILD_DIR

# we need to copy the sdk into the /app folder in order for the sdk libraries to be referenced correctly
# reason being that the /tmp folder will be deleted after build, and /app resembles the location of the ready built app
cp -r $CACHE_DIR/dart-sdk /app


message "-----> Install packages"

cd $BUILD_DIR

for filename in `find . -name pubspec.yaml | grep -v dart-sdk | grep -v pub-cache`; do
    pub_dir=`dirname $filename`
    message "*** Found pubspec.yaml in $pub_dir"
    cd $BUILD_DIR/$pub_dir

    #start pub from the /app folder to have correct symlink paths
    /app/dart-sdk/bin/pub install

    if [ -e $BUILD_DIR/$pub_dir/web/packages ]; then
        cd $BUILD_DIR/$pub_dir/web
        ln -sf ../packages
        message "Fixed web symlink"
    fi
done

# move packages from cache directory into build directory
cd $CACHE_DIR
cp -r $CACHE_DIR/pub-cache $BUILD_DIR/$PACKAGES_DIR

# run Dart build script
cd $BUILD_DIR
if [ -e "build.dart" ]; then
	message "-----> Run Dart build script (build.dart)"
	/app/dart-sdk/bin/dart --package-root=packages/ build.dart
fi
